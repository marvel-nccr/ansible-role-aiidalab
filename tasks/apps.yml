- name: "Clone app repositories"
  git:
    repo: 'https://github.com/{{ app.github_repo }}'
    dest: "{{ aiidalab_apps_folder }}/{{ app.name }}"
    force: true
    version: "{{ app.version }}"
    accept_hostkey: true
    recursive: false
  loop: "{{ aiidalab_apps }}"
  loop_control:
    loop_var: app

- name: Document AiiDAlab apps
  when: release_notes is defined and release_notes
  include_role:
    name: release_notes
  vars:
    section: "AiiDAlab Apps"
    option: "{{ app.name }}"
    value: "{{ app.version }}"
  loop: "{{ aiidalab_apps }}"
  loop_control:
    loop_var: app

# TODO despite the unique filter, pip may still fail if two apps set slightly different qualifiers, e.g.
# ERROR: Double requirement given: wheel==0.35.1 (from -r test.txt (line 2)) (already in wheel>=0.35.0 (from -r test.txt (line 1)), name='wheel')

- name: install server-side (aiida) dependencies
  pip:
    name: "{{ aiidalab_apps | rejectattr('requirements_aiida', 'undefined') | map(attribute='requirements_aiida') | flatten | sort | unique }}"
    virtualenv: "{{ aiidalab_aiida_venv }}"
    extra_args: "-c {{ aiidalab_aiida_venv_constraints }}"

- name: install client-side (jupyter) dependencies
  pip:
    name: "{{ aiidalab_apps | rejectattr('requirements_jupyter', 'undefined') | map(attribute='requirements_jupyter') | flatten | sort | unique }}"
    virtualenv: "{{ aiidalab_jupyter_venv }}"

# NOTE: It appears that appmode will/should automatically enable
# any jupyter extensions defined in the apps
# e.g. https://github.com/aiidalab/aiidalab-qe/blob/master/jupyter-config/nbconfig/notebook.d/aiidalab.json
# so that is not required here
