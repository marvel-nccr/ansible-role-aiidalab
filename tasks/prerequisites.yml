- name: Install apt requirements
  become: true
  become_user: "{{ root_user }}"
  apt:
    name:
    - git
    - python3-dev
    - python3-pip
    - python3-wheel
    - povray # required? (in aiidalab docker)

- name: Install apt requirements (20.04 only)
  become: true
  become_user: "{{ root_user }}"
  apt:
    name:
    - gcc        # for psutil
    - g++        # for building pymatgen C extensions
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'

- name: install virtualenv
  become: true
  become_user: "{{ root_user }}"
  pip:
    name: virtualenv
    executable: pip3

- name: "Let virtualenvwrapper use the correct python version"
  lineinfile:
    path: "${HOME}/.bashrc"
    regex: "export VIRTUALENVWRAPPER_PYTHON=.*"
    line: "export VIRTUALENVWRAPPER_PYTHON={{ ansible_python_interpreter }}"
  when: ansible_python_interpreter is defined

- name: Create the client-side virtual env
  pip:
    name:
    - appmode==0.8.0
    - jupyterlab==2.2.8
    - notebook==6.1.4
    virtualenv: "{{ aiidalab_client_venv }}"

- name: Create the server-side virtual env
  pip:
    name:
    - "aiidalab=={{ aiidalab_version }}"
    - ipykernel
    virtualenv: "{{ aiidalab_server_venv }}"

- name: activate ipython kernel
  shell: "{{ aiidalab_server_venv }}/bin/python -m ipykernel install --user"
  args:
    creates: "${HOME}/.local/share/jupyter/kernels/python3/kernel.json"

- name: enable app mode nbextension
  shell: "{{ aiidalab_client_venv }}/bin/jupyter nbextension install --sys-prefix --py appmode"
  args:
    creates: "{{ aiidalab_client_venv }}/share/jupyter/nbextensions/appmode/extension.js"

- name: enable app mode serverextension
  shell: "{{ aiidalab_client_venv }}/bin/jupyter serverextension install --sys-prefix --py appmode"
  changed_when: false
